{
  "stats": {
    "suites": 4,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-29T05:46:52.349Z",
    "end": "2025-07-29T05:46:54.873Z",
    "duration": 2524,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "101970c7-8551-41d0-b88b-9510ba6d0707",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2b1a9d53-b8ed-4fdd-bd6e-ee725e55ebc9",
          "title": "DELETE_Request_regres.in",
          "fullFile": "C:\\Users\\ASUS VIVOBOOK\\Downloads\\Sesi07\\TestAuto\\DELETE_Request_Sesi07.js",
          "file": "\\TestAuto\\DELETE_Request_Sesi07.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete should get response 204",
              "fullTitle": "DELETE_Request_regres.in Delete should get response 204",
              "timedOut": false,
              "duration": 562,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"DELETE\",\n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n// Check if the response status is 204 No Content\nexpect(response.status).to.equal(204);",
              "err": {},
              "uuid": "8920b7f1-9ac7-45c8-8b6c-1a6085b15aaf",
              "parentUUID": "2b1a9d53-b8ed-4fdd-bd6e-ee725e55ebc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete should not return any content",
              "fullTitle": "DELETE_Request_regres.in Delete should not return any content",
              "timedOut": false,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/3\", {\n    method: \"DELETE\",\n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n    if (response.status === 204) {\n        const text = await response.text();\n    if (text) {\n        const data = JSON.parse(text);\n        // lakukan pengecekan pada data jika perlu\n    } else {\n        // response memang kosong, sesuai ekspektasi\n    }\n}\n\n//console.log();\nexpect(text).to.be.empty;",
              "err": {},
              "uuid": "82941baa-bb62-4573-86db-84e56d22b0b5",
              "parentUUID": "2b1a9d53-b8ed-4fdd-bd6e-ee725e55ebc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate file JSON Schema DELETE",
              "fullTitle": "DELETE_Request_regres.in Validate file JSON Schema DELETE",
              "timedOut": false,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"DELETE\",\n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n// Since DELETE does not return a body, we validate the status code\nexpect(response.status).to.equal(204);",
              "err": {},
              "uuid": "d6563c35-2c39-44a1-83d6-290bb41eaafb",
              "parentUUID": "2b1a9d53-b8ed-4fdd-bd6e-ee725e55ebc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8920b7f1-9ac7-45c8-8b6c-1a6085b15aaf",
            "82941baa-bb62-4573-86db-84e56d22b0b5",
            "d6563c35-2c39-44a1-83d6-290bb41eaafb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 985,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "98b8035a-4568-44a5-a44d-7a9399891441",
          "title": "Get_Request_regres.in",
          "fullFile": "C:\\Users\\ASUS VIVOBOOK\\Downloads\\Sesi07\\TestAuto\\Get_Request_Sesi07.js",
          "file": "\\TestAuto\\Get_Request_Sesi07.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Status respons 200",
              "fullTitle": "Get_Request_regres.in Get Status respons 200",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\");\nconst responseAPI = await response.json();\n\n// chai\nexpect(response.status).to.equal(200)",
              "err": {},
              "uuid": "ce4be37a-9f32-4f23-b85a-5608423ef270",
              "parentUUID": "98b8035a-4568-44a5-a44d-7a9399891441",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get API data fist and last name",
              "fullTitle": "Get_Request_regres.in Get API data fist and last name",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\");\nconst responseAPI = await response.json();\n\n// chai\nexpect(responseAPI.data.first_name).to.include(\"Janet\");\nexpect(responseAPI.data.last_name).to.include(\"Weaver\");",
              "err": {},
              "uuid": "a55fc742-3b2f-4600-972a-8aac52ab1ae9",
              "parentUUID": "98b8035a-4568-44a5-a44d-7a9399891441",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate file JSON Schema GET",
              "fullTitle": "Get_Request_regres.in Validate file JSON Schema GET",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\");\nconst responseAPI = await response.json();\n// validasi schema\nconst ajv = new Ajv({ allErrors: true }); \nconst schema = {\n    type: \"object\",\n    properties: {\n        data: {\n            type: \"object\",\n            properties: {\n                id: { type: \"number\" },\n                email: { type: \"string\" },\n                first_name: { type: \"string\" },\n                last_name: { type: \"string\" },\n                avatar: { type: \"string\" }\n            },\n            required: [\"id\", \"email\", \"first_name\", \"last_name\", \"avatar\"]\n        }\n    },\n    required: [\"data\"]\n};\nconst validate = ajv.compile(schema);\nconst valid = validate(responseAPI);\nif (!valid) {\n    console.error(validate.errors);\n}\nexpect(valid).to.be.true;",
              "err": {},
              "uuid": "58c1c35b-8804-4d9e-88ce-cc37495d2d28",
              "parentUUID": "98b8035a-4568-44a5-a44d-7a9399891441",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce4be37a-9f32-4f23-b85a-5608423ef270",
            "a55fc742-3b2f-4600-972a-8aac52ab1ae9",
            "58c1c35b-8804-4d9e-88ce-cc37495d2d28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 163,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0fe61d5a-412f-4eee-a8fa-79b5f047067a",
          "title": "PATCH_Request_regres.in",
          "fullFile": "C:\\Users\\ASUS VIVOBOOK\\Downloads\\Sesi07\\TestAuto\\PATCH_Request_Sesi07.js",
          "file": "\\TestAuto\\PATCH_Request_Sesi07.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Patch should get response 200",
              "fullTitle": "PATCH_Request_regres.in Patch should get response 200",
              "timedOut": false,
              "duration": 219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"PATCH\",\n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n        name: \"Sinta\",\n        job: \"Developer\",\n    }),\n});\nconst data = await response.json();\n//console.log(data);\nexpect(response.status).to.equal(200);",
              "err": {},
              "uuid": "4de6aac9-c28e-4ec8-a6da-108c9600bdfd",
              "parentUUID": "0fe61d5a-412f-4eee-a8fa-79b5f047067a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Patch should be success on full body",
              "fullTitle": "PATCH_Request_regres.in Patch should be success on full body",
              "timedOut": false,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"PATCH\",\n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n        name: \"Desi\",\n        job: \"QA Manual\",\n        id: Math.floor(Math.random() * 1000), // Random ID for uniqueness\n    }),\n});\nconst data = await response.json();\n//console.log(data);\nexpect(data.name).to.include(\"Desi\");\nexpect(data.job).to.include(\"QA Manual\");\nexpect(response.id).to.not.be.null;\nexpect(response.updatedAt).to.not.be.null;",
              "err": {},
              "uuid": "5f58cb28-0e64-4d5e-bcab-b5158222a969",
              "parentUUID": "0fe61d5a-412f-4eee-a8fa-79b5f047067a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate file JSON Schema PATCH",
              "fullTitle": "PATCH_Request_regres.in Validate file JSON Schema PATCH",
              "timedOut": false,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"PATCH\",\n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n        name: \"Greta\",\n        job: \"Software Engineer\",\n        id: Math.floor(Math.random() * 1000), // Random ID for uniqueness\n    }),\n});\nconst data = await response.json();\n//console.log(data);\n// validasi schema\nconst ajv = new Ajv({ allErrors: true }); \nconst schema = {\n    type: \"object\",\n    properties: {\n        name: { type: \"string\" },\n        job: { type: \"string\" },\n        id: { type: \"number\" },\n        updatedAt: { type: \"string\" }\n    },\n    required: [\"name\", \"job\", \"id\", \"updatedAt\"]\n};\nconst validate = ajv.compile(schema);\nconst valid = validate(data);\nif (!valid) {\n    console.error(validate.errors);\n}\nexpect(valid).to.be.true;",
              "err": {},
              "uuid": "c18ee4b7-42dc-4381-acf3-2621a5dc00ce",
              "parentUUID": "0fe61d5a-412f-4eee-a8fa-79b5f047067a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4de6aac9-c28e-4ec8-a6da-108c9600bdfd",
            "5f58cb28-0e64-4d5e-bcab-b5158222a969",
            "c18ee4b7-42dc-4381-acf3-2621a5dc00ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 678,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe36e8b6-2168-4eb3-bba5-452ac49d8e4a",
          "title": "POST_Request_regres.in",
          "fullFile": "C:\\Users\\ASUS VIVOBOOK\\Downloads\\Sesi07\\TestAuto\\POST_Request_Sesi07.js",
          "file": "\\TestAuto\\POST_Request_Sesi07.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "New Post should get respons 201",
              "fullTitle": "POST_Request_regres.in New Post should get respons 201",
              "timedOut": false,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"POST\",\n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n        name: \"shinta\",\n        job: \"QA \",\n    }),\n});\nconst data = await response.json();\n//console.log(data);\nexpect(response.status).to.equal(201);",
              "err": {},
              "uuid": "d0bb9735-a679-44b2-a1db-544eb2a8d50f",
              "parentUUID": "fe36e8b6-2168-4eb3-bba5-452ac49d8e4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "New Post should be success on full body",
              "fullTitle": "POST_Request_regres.in New Post should be success on full body",
              "timedOut": false,
              "duration": 218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"POST\",\n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n        name: \"GLORIA\",\n        job: \"QA Automation\",\n        id: Math.floor(Math.random() * 1000), // Random ID for uniqueness\n    }),\n});\nconst data = await response.json();\n//console.log(data);\nexpect(data.name).to.include(\"GLORIA\");\nexpect(data.job).to.include(\"QA Automation\");\nexpect(response.id).to.not.be.null;\nexpect(response.createdAt).to.not.be.null;",
              "err": {},
              "uuid": "5a39935d-455f-4c97-94b7-608f8b66e5aa",
              "parentUUID": "fe36e8b6-2168-4eb3-bba5-452ac49d8e4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate file JSON Schema POST",
              "fullTitle": "POST_Request_regres.in Validate file JSON Schema POST",
              "timedOut": false,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"POST\",\n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n        name: \"Shinta\",\n        job: \"Frontend Developer\",\n        id: Math.floor(Math.random() * 1000), // Random ID for uniqueness\n    }),\n});\nconst data = await response.json();\n//console.log(data);\n   \n// validasi schema\nconst ajv = new Ajv({ allErrors: true });\nconst schema = {\n    type: \"object\",\n    properties: {\n        name: { type: \"string\" },\n        job: { type: \"string\" },\n        id: { type: \"number\" },\n        createdAt: { type: \"string\" }\n    },\n    required: [\"name\", \"job\", \"id\", \"createdAt\"]\n};\nconst validate = ajv.compile(schema);\nconst isValid = validate(data);// Cetak error jika tidak valid\nconst errorMessage = JSON.stringify(validate.errors, null, 2);\nexpect(isValid, errorMessage).to.be.true;",
              "err": {},
              "uuid": "7c7212e3-8829-4026-a20b-f009dcb72594",
              "parentUUID": "fe36e8b6-2168-4eb3-bba5-452ac49d8e4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0bb9735-a679-44b2-a1db-544eb2a8d50f",
            "5a39935d-455f-4c97-94b7-608f8b66e5aa",
            "7c7212e3-8829-4026-a20b-f009dcb72594"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 671,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}